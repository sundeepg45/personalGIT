<apex:page standardController="Opportunity" extensions="OpportunityRedirectControllerExtension,Opportunity_ApprovalReqDiscussContExtn" tabStyle="Opportunity" action="{!viewOpportunity}" rendered="{!NOT(ISBLANK(Opportunity.Name))}">
<script type="text/javascript">__sfdcSessionId="{!$Api.Session_ID}";</script>
<script src="/soap/ajax/12.0/connection.js" type="text/javascript"></script>
<script src="/soap/ajax/12.0/apex.js" type="text/javascript"></script>
<script src="{!URLFOR($Resource.sfdc_js, '/js/jquery-1.4.2.min.js')}"></script>
<apex:pageMessages />
<apex:form rendered="{!NOT(OR(Opportunity.StageName='Pending',Opportunity.StageName='Rejected'))}">
    <apex:actionFunction name="recallApproval" action="{!recallApproval}" oncomplete="location.reload();" />
</apex:form>
<apex:form rendered="{!OR(Opportunity.StageName='Pending',Opportunity.StageName='Rejected')}">
    <apex:pageBlock title="Approval Request Discussion">
        <apex:pageBlockButtons location="top" rendered="{!AND(Opportunity.StageName='Pending',NOT(ISNULL(feedStagePendingComment.FeedItemId)))}">
            <apex:commandButton id="newFeedStagePendingComment" value="New Comment" onclick="return toggleElements();" immediate="true"/>
            <apex:commandButton id="saveFeedStagePendingComment" action="{!saveFeedStagePendingComment}" value="Save Comment" style="display:none"/>
            <apex:commandButton id="cancelFeedStagePendingComment" value="Cancel" onclick="return toggleElements();" style="display:none" immediate="true"/>
        </apex:pageBlockButtons>
        <div id="{!$Component.feedStagePendingComment}.div" style="display:none">
            <apex:pageBlockSection columns="1" id="feedStagePendingComment" rendered="{!AND(Opportunity.StageName='Pending',NOT(ISNULL(feedStagePendingComment.FeedItemId)))}">
                <apex:inputField value="{!feedStagePendingComment.CommentBody}" style="width:100%;height:12em;" id="commentBody" />
            </apex:pageBlockSection>
        </div>
        <apex:pageBlockSection columns="1" rendered="{!FeedStagePendingComments.size > 0}">
            <apex:pageBlockTable value="{!feedStagePendingComments}" var="comment">
                <apex:column headerValue="Comments">
                    <apex:outputPanel layout="block">
                        <b>
                            <apex:outputLabel value="Created By: " for="createdBy"/>
                            <apex:outputPanel layout="inline" id="createdBy">
                                <apex:outputField value="{!comment.CreatedById}" id="createdByOutput" />
                                <apex:outputText value=", {!comment.CreatedDate}" id="createdDateOutput"/>
                            </apex:outputPanel>
                        </b>
                    </apex:outputPanel><br />
                    <apex:outputField value="{!comment.CommentBody}"/>
                </apex:column>
            </apex:pageBlockTable>
        </apex:pageBlockSection>
        <apex:commandLink action="{!showMoreFeedStagePendingComments}" value="Show more Â»" id="showMoreFeedStagePendingComments" rendered="{!AND(feedStagePendingComments.size = feedStagePendingCommentsLimit,canShowMoreFeedStagePendingComments)}" immediate="true"/>
    </apex:pageBlock>
<script>
function toggleElement(e) {
    if(e && e.style) {
        if(e.style.display == 'none') {
            e.style.display = '';
            return true;
        }
        else {
            e.style.display = 'none';
            return false;
        }
    }
    return false;
}
</script>
<script>
function toggleElements() {
    toggleElement(document.getElementById('{!$Component.newFeedStagePendingComment}'));
    toggleElement(document.getElementById('{!$Component.saveFeedStagePendingComment}'));
    toggleElement(document.getElementById('{!$Component.cancelFeedStagePendingComment}'));
    if(! toggleElement(document.getElementById('{!$Component.feedStagePendingComment}.div'))) {
        var e = document.getElementById('{!$Component.feedStagePendingComment.commentBody}');
        if(e != null) {
            e.value='';
        }
    }
    return false;
}
</script>
</apex:form>
<apex:detail relatedList="true" relatedListHover="true" subject="{!Opportunity.Id}" inlineEdit="true" showChatter="true" oncomplete="location.reload();" />
<div id="HiddenClone" style="display:block">
    <div class="menuButton" id="Clone"><div class="menuButtonButton" id="CloneButton"><span id="CloneLabel" tabindex="0" style="">Clone</span></div><div class="menuButtonMenu" id="CloneMenu"><a href="/{!Opportunity.Id}/e?clone=1&retURL=/{!Opportunity.Id}&cloneli=1" class="menuButtonMenuLink firstMenuItem">Clone with Products</a><a href="/{!Opportunity.Id}/e?clone=1&retURL=/{!Opportunity.Id}" class="menuButtonMenuLink">Clone without Products</a></div></div>
</div>
<script type="text/javascript">
function disableButton(name) {
    try {
        var a = $('input[name*="'+name+'"]');
        if(a) { a.attr('disabled','disabled'); a.css("color","grey"); }
    }
    catch(e) {}
}
</script>
<script type="text/javascript">
function replaceMenuButton(name,id) {
    try {
        var input = $('input[name*="'+name+'"]');
        if(input) {
            var cloneNode = document.getElementById(id);
            if(cloneNode) {
                var c = cloneNode.cloneNode(true);
                cloneNode.parentNode.removeChild(cloneNode);
                // this substitution does not seem to work for more than one instance
                // of the button
                input[0].parentNode.replaceChild(c,input[0]);
                new MenuButton(id, false);
            }
        }
    }
    catch(e) {}
}
</script>
<script type="text/javascript">
function replaceButton(name,name2) {
    try {
        var input = $('input[name*="'+name+'"]');
        if(input) {
            var input2 = $('input[name*="'+name2+'"]');
            if(input2) {
                var c = input2[0];
                for(var i=input.length;i-- > 0;) {
                    input[i].parentNode.replaceChild(c.cloneNode(),input[i]);
                }
                for(var i=input2.length;i-- > 0;) {
                    input2[i].parentNode.removeChild(input2[i]);
                }
            }
        }
    }
    catch(e) {}
}
</script>
<script type="text/javascript">
function removeButton(name) {
    try {
        var a = $('input[name*="'+name+'"]');
        if(a) { a.attr('disabled','disabled'); a.css("color","grey"); a.css("display","none"); }
    }
    catch(e) {}
}
</script>
<script type="text/javascript">
var intervalId = null;
function reloadMessage() {
    //alert('hash='+top.location.hash+','+location.hash);
    var msg = unescape(location.hash.substring(1));
    if(msg == 'reload') {
        clearInterval(intervalId);
        location.hash = '';
        location.reload();
    }
}
</script>
<script type="text/javascript">
function submitForApprovalFilter(event) {
    event.preventDefault();
    alert('All required fields must be populated.');
    location.href = '{!JSENCODE(ShowSumitForApprovalErrorsUrl)}';
    return false;
}

function addSubmitForApprovalFilter() {
    try {
        $('input[name*="piSubmit"]').each(function(index){
        $(this).attr("onclick","");
        $(this).click(submitForApprovalFilter);
        });
    }
    catch(ex) {}
}
</script>
<script type="text/javascript">
jQuery(document).ready(function(){
    intervalId=setInterval('reloadMessage()',50);
    if({!financialPartnerRequired}) {
        disableButton('submitorder');
        disableButton('close_opportunity');
    }
    if({!isAccepted}) {
        replaceButton('piSubmit','recallapproval');
    }
    else {
        removeButton('recallapproval');
    }
    if('{!Opportunity.Country_of_Order__c}' == 'Colombia') {
        disableButton('creditcheck');
    }
    if({!Opportunity.HasOpportunityLineItem}) {
        replaceMenuButton('clone','Clone');
    }
    if({!NOT(createPOCEnabled)}) {
        removeButton('create_proof_of_concept');    
    }
    if({!hasZeroValueOpportunityErrors}) {
        addSubmitForApprovalFilter();
    }
    if(sfdcPage.renderDetail) {
        sfdcPage.saveReal = sfdcPage.save;
        sfdcPage.save = function(domIdentifer) {
            if(! sfdcPage.renderDetailReal) {
                sfdcPage.renderDetailReal = sfdcPage.renderDetail;
                sfdcPage.renderDetail = function(visualForce) {
                    if(visualForce) {
                        var result = sforce.connection.query("Select FulfillmentChannel__c, StageName from Opportunity where Id = '{!Opportunity.Id}' ");
                        var it = new sforce.QueryResultIterator(result);
                        if(it.hasNext()) {
                            var opp = it.next();
                            if('{!Opportunity.FulfillmentChannel__c}' != opp.FulfillmentChannel__c || '{!Opportunity.StageName}' != opp.StageName) {
                                try {
                                    top.window.location.replace('{!URLFOR($Action.Opportunity.View,Opportunity.Id)}');
                                } catch(e1) {
                                    try {
                                        window.location.reload();
                                    } catch(e2) {
                                        top.window.location = '{!URLFOR($Action.Opportunity.View,Opportunity.Id)}';
                                    }
                                }
                            }
                        }
                    }
                    return this.renderDetailReal(visualForce);
                }
            }
            return this.saveReal(domIdentifer);
        }
    }
});
</script>
<script type="text/javascript">
setTimeout(function(){var a=document.createElement("script");
var b=document.getElementsByTagName("script")[0];
a.src=document.location.protocol+"//script.crazyegg.com/pages/scripts/0028/7638.js?"+Math.floor(new Date().getTime()/3600000);
a.async=true;a.type="text/javascript";b.parentNode.insertBefore(a,b)}, 1);
</script>
</apex:page>