<apex:page controller="CreateSSOUser_Controller">
    <header>
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
        <apex:includeScript value="{!$Resource.PartnerSharedScripts}"/>
        <script type="text/javascript">
            $.noConflict();

            jQuery(document).ready(function() {

                jQuery('#createOrInviteCreate').attr('checked', 'checked');

                jQuery('input').keydown(function(event) { //event==Keyevent
                    if(event.which == 13) {
                        event.preventDefault(); //Disable standard Enterkey action
                    }
                });
            });

            //
            // For browsers that support XDomainRequest, install as the XHR handler for jQuery
            //
            if ('XDomainRequest' in window && window.XDomainRequest !== null) {

              // override default jQuery transport
              jQuery.ajaxSettings.xhr = function() {
                  try { return new XDomainRequest(); }
                  catch(e) { }
              };
              // also, override the support check
              jQuery.support.cors = true;
            }


            function unescapeHtml(html){
                return jQuery("<div />").html(html).text();
            }

            var responded = {'createUser' : true, 'checkAvailable' : true};
            var loginAvail = false;
            var requiredFields = ['greeting',
                                    'firstName',
                                    'lastName',
                                    'address1',
                                    'city',
                                    'countryCode',
                                    'state',
                                    'postalCode',
                                    'email',
                                    'phone',
                                    'federationId'];
            var lastEmail = '';

            var errors = {
                'API-CreateUser':unescapeHtml('{!$Label.ManagerUsers_Error_Failed_To_Create_Contact}'),
                'API-UpdateUser':unescapeHtml('{!$Label.ManagerUsers_Error_Something_Went_Wrong}'),
                'NewUserEmail':unescapeHtml('{!$Label.ManagerUsers_Error_New_User_email_failed}'),
                'catchall':unescapeHtml('{!$Label.ManagerUsers_Error_Something_Went_Wrong}'),
                'API-RetrievePrincipalUser':unescapeHtml('{!$Label.ManagerUsers_Error_Could_Not_FInd_User}'),
                'NotAdmin':unescapeHtml('{!$Label.ManagerUsers_Error_Not_An_Admin}'),
                'NotAuthenticated':unescapeHtml('{!$Label.ManagerUsers_Error_Not_Authenticated}'),
                'API-AccountDetails':unescapeHtml('{!$Label.ManagerUsers_Error_Could_Not_Find_Account}')
            };

            function checkRequiredFields(){
                var form = getElementByPartialId('form','.*userCreateForm');
                var pass = true;
                for(i=0; i < form.elements.length; i++)
                {
                    if (jQuery.inArray(form.elements[i].name, requiredFields) >= 0){
                        if(form.elements[i].value.length == 0){
                            if (form.elements[i].name == 'state'){
                                if (getElementByPartialId('select','.*stateCombo').options.length <= 1){
                                    toggleStyle(form.elements[i].name,'none');
                                    continue;
                                }
                            }
                            toggleStyle(form.elements[i].name,'');
                            if (pass){
                                form.elements[i].focus();
                            }
                            pass = false;
                        } else {
                            toggleStyle(form.elements[i].name,'none');
                        }
                    }
                    if (form.elements[i].name == 'email' && form.elements[i].value.length > 0){
                        var epass = echeck(form.elements[i].value);
                        pass = epass && pass;
                    }
                    pass = loginAvail && pass;
                }
                return pass;
            }

            function echeck(str) {
                var reg = /^([A-Za-z0-9_\-\.\+])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
                if(!reg.test(str)) {
                    document.getElementById('badEmail').style.display = '';
                    return false;
                }
                document.getElementById('badEmail').style.display = 'none';
                return true;
            }

            function toggleStyle(name, style){
                if (document.getElementById(name + 'Required') != null){
                    document.getElementById(name + 'Required').style.display = style;
                }
            }

            function translateError(errorCode){
                if (errors[errorCode] != null){
                    return errors[errorCode];
                }
                for (var i = 0; i < errors.length; i++){
                    if (errors[i][0].startswith(errorCode)){
                        return errors[i][1];
                    }
                }
                return errorCode;
            }

            function createUser()
            {
                isCreate = jQuery('#createOrInviteCreate').prop('checked');

                if (isCreate){
                    return createUserAjax();
                } else {
                    //Invite
                    getElementByPartialId('input','.*inviteEmail').value = jQuery('#email').val();
                    getElementByPartialId('input','.*inviteFederationId').value = jQuery('#federationId').val();
                    getElementByPartialId('input','.*inviteLocaleSidKey').value =  jQuery('#locale').val();
                    getElementByPartialId('input','.*inviteEmailEncodingKey').value =  jQuery('#emailEncoding').val();
                    getElementByPartialId('input','.*inviteTimeZoneSidKey').value =  jQuery('#timeZone').val();
                    getElementByPartialId('input','.*inviteLanguageLocaleKey').value =  jQuery('#languageLocale').val();
                    getElementByPartialId('input','.*inviteIsAdmin').checked = jQuery('#isadmin').attr('checked');

                    getElementByPartialId('input','.*createInvite').click();
                }

            }

            function createUserAjax(){

                if (!checkRequiredFields())
                    return;
                if (!responded.createUser)
                    return;

                toggleCreateButtons(false);
                responded.createUser = false;

                var form = getElementByPartialId('form','.*userCreateForm');
                var values = '';
                var fields = 0;
                for(i=0; i < form.elements.length; i++)
                {
                    if (!(form.elements[i].name.match('.*ViewState') || form.elements[i].name.match('cbo.*'))){
                        if (fields > 0){
                            values += '&';
                        }
                        fields++;
                        if (form.elements[i].type == 'checkbox')
                        {
                            values += form.elements[i].name + '=' + form.elements[i].checked;
                        } else {
                            values += form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value);
                        }
                    }
                }

                window.setTimeout("checkForResponse('createUser');", 30000);
                document.getElementById('createButtonTopThrobber').style.display = '';
                document.getElementById('createButtonBottomThrobber').style.display = '';

                jQuery.ajax(
                {
                      url: '{!$Label.Red_Hat_Domain_Name}/wapps/sfconnector/protected/ajax/createUser',
                      dataType: 'jsonp',
                      data: values,
                      success: function(jsonResult){
                        responded.createUser = true;
                        if (!eval(jsonResult.complete)){
                            alert(translateError(jsonResult.error));
                            document.getElementById('createButtonTopThrobber').style.display = 'none';
                            document.getElementById('createButtonBottomThrobber').style.display = 'none';
                            toggleCreateButtons(true);
                        } else {
                            navigateToUrl('/apex/ManageSSOUsers?message=createComplete',null,'new');
                        }
                      }
                });
            }

            function checkForResponse(caller){
                if (!responded[caller]){
                    alert(unescapeHtml('{!$Label.ManagerUsers_No_Response_From_RH_com}'));
                    if (called == 'checkAvailable'){
                        window.setTimeout("checkForResponse('checkAvailable');", 10000);
                    } else if (called == 'createUser'){
                        window.setTimeout("checkForResponse('createUser');", 10000);
                    }
                }
            }

            function clearErrors(){
                // Clear Errors
                jQuery('#loginPersonal').hide();
                jQuery('#sfUserExists').hide();
                jQuery('#sfInviteExists').hide();
                jQuery('#loginNotAvailable').hide();
                jQuery('#loginNotFound').hide();
            }

            function checkAvailable(){
                if (!responded.checkAvailable)
                    return;

                loginAvail = false;
                toggleCreateButtons(false);
                if (document.getElementById('federationId').value.length == 0)
                    return false;

                clearErrors();

                responded.checkAvailable = false;
                isCreate = jQuery('#createOrInviteCreate').prop('checked');


                window.setTimeout("checkForResponse('checkAvailable');", 30000);
                jQuery('#checkingLoginThrobber').show();

                jQuery.ajax(
                {
                      url: '{!$Label.Red_Hat_Domain_Name}/wapps/sfconnector/protected/ajax/checkAvailability',
                      dataType: 'jsonp',
                      data: 'login=' + encodeURIComponent(document.getElementById('federationId').value),
                      success: function(jsonResult) {
                        responded.checkAvailable = true;
                        if (!eval(jsonResult.complete)){
                            jQuery('#checkingLoginThrobber').hide();
                            alert(translateError(jsonResult.error));
                            toggleCreateButtons(false);
                        } else {
                            jQuery('#checkingLoginThrobber').hide();
                            loginAvail = eval(jsonResult.payload.available);
                            console.log(jsonResult.payload);
                            if (loginAvail && isCreate) {
                                toggleCreateButtons(true);
                            }
                            else if (!loginAvail && isCreate) {
                                jQuery('#loginNotAvailable').show();
                            }
                            else if (loginAvail) {
                                jQuery('#loginNotFound').show();
                                jQuery('#email').val('');
                            }
                            else {
                                if (eval(jsonResult.payload.sfUserExists)) {
                                    jQuery('#sfUserExists').show();
                                }
                                else if (eval(jsonResult.payload.sfInviteExists)){
                                    jQuery('#sfInviteExists').show();
                                }
                                else if (eval(jsonResult.payload.loginPersonal)) {
                                    jQuery('#loginPersonal').show();
                                }
                                else {
                                    jQuery('#email').val(jsonResult.payload.email);
                                    toggleCreateButtons(true);
                                }
                            }
                        }

                      }
                });
            }


            function populateFedIdWithEmail(){
                if(document.getElementById('federationId').value.length == 0 && document.getElementById('email').value.length > 0){
                    document.getElementById('federationId').value = document.getElementById('email').value;
                    checkAvailable();
                    echeck(document.getElementById('email').value);
                }
            }

            function setStateAndCountry(){
                document.getElementById('state').value = getElementByPartialId('select','.*stateCombo').value;
                document.getElementById('countryCode').value = getElementByPartialId('select','.*countryCombo').value;
            }

            function getElementByPartialId(tag, partialid){
                var re= new RegExp(partialid,'g')
                var el = document.getElementsByTagName(tag);
                for(var i=0;i<el.length;i++){
                    if(el[i].id.match(re)){
                        return el[i];
                    }
                }
            }

            function toggleCreateInvite(showOrHide){
                clearErrors();
                toggleCreateButtons(false);

                jQuery('#federationId').val('');
                if (!showOrHide){
                    lastEmail = jQuery('#email').val();
                    jQuery('#email').val('');
                } else {
                    jQuery('#email').val(lastEmail);
                }

                jQuery('#createGreeting').toggle(showOrHide);
                jQuery('#createFirstName').toggle(showOrHide);
                jQuery('#createLastName').toggle(showOrHide);
                jQuery('#createAddress1').toggle(showOrHide);
                jQuery('#createAddress2').toggle(showOrHide);
                jQuery('#createAddress3').toggle(showOrHide);
                jQuery('#createCity').toggle(showOrHide);
                jQuery('#createState').toggle(showOrHide);
                jQuery('#createCountry').toggle(showOrHide);
                jQuery('#createPostalCode').toggle(showOrHide);
                jQuery('#createEmail').toggle(showOrHide);
                jQuery('#createPhone').toggle(showOrHide);
                //jQuery('#confirmLoginButton').toggle(!showOrHide);
            }

            function toggleCreateButtons(enabled) {
                if (enabled){
                    jQuery('#createButtonTop').removeAttr('disabled');
                    jQuery('#createButtonBottom').removeAttr('disabled');
                    jQuery('#createButtonTop').removeClass('btnDisabled');
                    jQuery('#createButtonBottom').removeClass('btnDisabled');
                    jQuery('#createButtonTop').addClass('btn');
                    jQuery('#createButtonBottom').addClass('btn');
                } else {
                    jQuery('#createButtonTop').attr('disabled', 'true');
                    jQuery('#createButtonBottom').attr('disabled', 'true');
                    jQuery('#createButtonTop').removeClass('btn');
                    jQuery('#createButtonBottom').removeClass('btn');
                    jQuery('#createButtonTop').addClass('btnDisabled');
                    jQuery('#createButtonBottom').addClass('btnDisabled');
                }
            }
        </script>
    </header>
    <div class="editPage sfdcBody">
        <div class="bPageTitle">
            <div class="ptBody secondaryPalette">
                <div class="content">
                    <h2 style="display:inline;" class="pageDescription">{!$Label.ManagerUsers_Label_SSO_User_Create}</h2>
                </div>
            </div>
        </div>
        <div>&nbsp;</div>
        <apex:pageBlock >
            <div class="pbHeader">
                <table border="0" cellspacing="0" cellpadding="0"><tbody>
                <tr>
                <td class="pbTitle"><img width="1" height="1" title="" class="minWidth" alt="" src="/s.gif"/><h2 class="mainTitle">{!$Label.ManagerUsers_Label_SSO_User_Create}</h2></td>
                <td id="topButtonRow" class="pbButton">
                    <input id="createButtonTop" type="button" disabled="true" title="{!$Label.ManagerUsers_Label_Create}" onclick="createUser(); return false;" name="create" class="btnDisabled" value="{!$Label.ManagerUsers_Label_Create}"/>
                    <span id="createButtonTopThrobber" style="display:none;"><img src="https://www.redhat.com/g/chrome/throbber_dickie.gif"/></span>&nbsp;
                    <input type="button" title="{!$Label.ManagerUsers_Label_Cancel}" onclick="navigateToUrl('/apex/ManageSSOUsers',null,'new');" name="cancel" class="btn" value="{!$Label.ManagerUsers_Label_Cancel}"/>
                </td></tr>
                </tbody></table>
            </div>
            <div class="pbBody">
                <apex:form id="userCreateForm">
                    <table align="center" width="20%" border="0" cellspacing="0" cellpadding="0" class="detailList"><tbody>
                        <tr>
                            <td class="labelCol">Create or invite user:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div>
                            <span><input type="radio" name="createorinvite" id="createOrInviteCreate" value="create" onChange="toggleCreateInvite(this.checked);"/></span><span>&nbsp;Create new Redhat.com/RHN (Red Hat Network) User&nbsp;</span>
                            <span><input type="radio" name="createorinvite" value="invite" onChange="toggleCreateInvite(!this.checked);"/></span><span>&nbsp;Invite Existing Redhat.com/RHN (Red Hat Network) User</span>
                            </div></td>
                        </tr>
                        <tr id="createGreeting">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Greeting}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div>
                            <select class="selectsize1" name="greeting" id="greeting">
                                <option selected="selected" value="Mr.">{!$Label.ManagerUsers_Greeting_Option_Mr}</option>
                                <option value="Mrs.">{!$Label.ManagerUsers_Greeting_Option_Mrs}</option>
                                <option value="Ms.">{!$Label.ManagerUsers_Greeting_Option_Ms}</option>
                                <option value="Miss">{!$Label.ManagerUsers_Greeting_Option_Miss}</option>
                                <option value="Dr.">{!$Label.ManagerUsers_Greeting_Option_Dr}</option>
                                <option value="Hr.">{!$Label.ManagerUsers_Greeting_Option_Hr}</option>
                                <option value="Sr.">{!$Label.ManagerUsers_Greeting_Option_Sr}</option>
                            </select>
                            <div class="errorMsg" id="greetingRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_Greeting} {!$Label.ManageUsers_Is_Required}</div>
                            </div></td>
                        </tr>
                        <tr id="createFirstName">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_FirstName}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input maxlength="40" type="textbox" name="firstName"/>
                            <div class="errorMsg" id="firstNameRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_FirstName} {!$Label.ManageUsers_Is_Required}</div>
                            </div></td>
                        </tr>
                        <tr id="createLastName">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_LastName}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input maxlength="80" type="textbox" name="lastName"/>
                            <div class="errorMsg" id="lastNameRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_LastName} {!$Label.ManageUsers_Is_Required}</div>
                            </div></td>
                        </tr>
                        <tr id="createAddress1">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Address1}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input maxlength="80" type="textbox" name="address1"/>
                            <div class="errorMsg" id="address1Required" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_Address1} {!$Label.ManageUsers_Is_Required}</div>
                            </div></td>
                        </tr>
                        <tr id="createAddress2">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Address2}:</td>
                            <td class="dataCol col02"><input maxlength="80" type="textbox" name="address2"/></td>
                        </tr>
                        <tr id="createAddress3">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Address3}:</td>
                            <td class="dataCol col02"><input maxlength="80" type="textbox" name="address3"/></td>
                        </tr>
                        <tr id="createCity">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_City}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input maxlength="100" type="textbox" name="city"/>
                                <div class="errorMsg" id="cityRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_City} {!$Label.ManageUsers_Is_Required}</div>
                            </div></td>
                        </tr>
                        <tr id="createCountry">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Country}:</td>
                            <td class="dataCol col02">
                                <div class="requiredInput"><div class="requiredBlock"></div>
                                <input type="hidden" id="countryCode" name="countryCode"/>
                                <apex:selectList value="{!CurrentCountry}" onblur="setStateAndCountry();" id="countryCombo" size="1">
                                    <apex:selectOption itemLabel="{!$Label.Onboarding_Register_Partner_PicklistOption_Select_Country}" itemValue="" />
                                    <apex:selectOption itemLabel="{!$Label.Onboarding_Register_Partner_PicklistOption_US}" itemValue="US" />
                                    <apex:selectOption itemLabel="-" itemValue="" />
                                    <apex:selectOptions value="{!SelectableCountryOptions}"/>
                                    <apex:actionSupport event="onchange" rerender="state"/>
                                </apex:selectList>
                                <div class="errorMsg" id="countryCodeRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_Country} {!$Label.ManageUsers_Is_Required}</div>
                                </div>
                            </td>
                        </tr>
                        <tr id="createState">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_State}:</td>
                            <td class="dataCol col02" id="stateComboArea">
                                <apex:outputPanel id="state">
                                    <apex:outputPanel rendered="{!SelectableStateOptions.size > 0}">
                                            <div class="requiredInput"><div class="requiredBlock"></div>
                                            <input type="hidden" id="state" name="state"/>
                                                <apex:selectList size="1" onchange="setStateAndCountry();" id="stateCombo" disabled="{!SelectableStateOptionsSize == 0}">
                                                    <apex:selectOption itemLabel="- Select State/Province -" itemValue="" />
                                                    <apex:selectOptions value="{!SelectableStateOptions}" />
                                                </apex:selectList>
                                            <div class="errorMsg" id="stateRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_State} {!$Label.ManageUsers_Is_Required}</div>
                                            </div>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!SelectableStateOptions.size == 0}">
                                            <input type="hidden" id="state" name="state"/>
                                            <select id="stateCombo" name="stateCombo" size="1" disabled="true"></select>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </td>
                        </tr>
                        <tr id="createPostalCode">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_PostalCode}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input maxlength="20" type="textbox" name="postalCode"/>
                            <div class="errorMsg" id="postalCodeRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_PostalCode} {!$Label.ManageUsers_Is_Required}</div>
                            </div></td>
                        </tr>
                        <tr id="createEmail">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Email}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input type="textbox" maxlength="255" onblur="populateFedIdWithEmail();" id="email" name="email"/>
                            <div class="errorMsg" id="emailRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_Email} {!$Label.ManageUsers_Is_Required}</div>
                            <div class="errorMsg" id="badEmail" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_Email} {!$Label.ManageUsers_Is_Not_A_Valid_Format}</div>
                            </div></td>
                        </tr>
                        <tr id="createPhone">
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Phone}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input type="textbox" maxlength="20" name="phone"/>
                            <div class="errorMsg" id="phoneRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_Phone} {!$Label.ManageUsers_Is_Required}</div>
                            </div></td>
                        </tr>
                        <tr>
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Redhat_com_Login}:</td>
                            <td class="dataCol col02"><div class="requiredInput"><div class="requiredBlock"></div><input onblur="checkAvailable();" onchange="checkAvailable();" maxlength="255" type="textbox" id="federationId" name="federationId"/>
                            &nbsp;<input type="button" id="confirmLoginButton" title="Validate" onclick="checkAvailable();" name="cancel" class="btn" value="Validate"/>
                            <span id="checkingLoginThrobber" style="display:none;"><img src="https://www.redhat.com/g/chrome/throbber_dickie.gif"/></span>
                            <div class="errorMsg" id="federationIdRequired" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Label_Redhat_com_Login} {!$Label.ManageUsers_Is_Required}</div>
                            <div class="errorMsg" id="loginNotAvailable" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Error_Already_In_Use}</div>
                            <div class="errorMsg" id="loginNotFound" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManageUsers_Error_Login_not_Found}</div>
                            <div class="errorMsg" id="loginPersonal" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManageUsers_Login_Personal_Account}</div>
                            <div class="errorMsg" id="sfUserExists" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_Login_already_exists}</div>
                            <div class="errorMsg" id="sfInviteExists" style="display:none;"><strong>{!$Label.ManagerUsers_Error_Label}</strong> {!$Label.ManagerUsers_User_already_Invited}</div>
                            </div></td>
                        </tr>
                        <tr>
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Language_Preference}</td>
                            <td class="dataCol col02">
                                <div class="requiredInput"><div class="requiredBlock"></div>
                                <select id="languageLocale" name="languageLocale" size="1">
                                    <apex:dataList value="{!LanguageOptions}" var="option">
                                        <apex:outputText rendered="{!option.value == me.LanguageLocaleKey}">
                                            <option value="{!option.value}" selected="true">{!option.label}</option>
                                        </apex:outputText>
                                        <apex:outputText rendered="{!option.value != me.LanguageLocaleKey}">
                                            <option value="{!option.value}">{!option.label}</option>
                                        </apex:outputText>
                                    </apex:dataList>
                                </select>
                            </div></td>
                        </tr>
                        <tr>
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Timezone}:</td>
                            <td class="dataCol col02">
                                <div class="requiredInput"><div class="requiredBlock"></div>
                                <select id="timeZone" name="timeZone" size="1">
                                    <apex:dataList value="{!TimezoneOptions}" var="option">
                                        <apex:outputText rendered="{!option.value == me.TimeZoneSidKey}">
                                            <option value="{!option.value}" selected="true">{!option.label}</option>
                                        </apex:outputText>
                                        <apex:outputText rendered="{!option.value != me.TimeZoneSidKey}">
                                            <option value="{!option.value}">{!option.label}</option>
                                        </apex:outputText>
                                    </apex:dataList>
                                </select>
                            </div></td>
                        </tr>
                        <tr>
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Locale}:</td>
                            <td class="dataCol col02">
                                <div class="requiredInput"><div class="requiredBlock"></div>
                                <select id="locale" name="locale" size="1">
                                    <apex:dataList value="{!LocaleOptions}" var="option">
                                        <apex:outputText rendered="{!option.value == me.LocaleSidKey}">
                                            <option value="{!option.value}" selected="true">{!option.label}</option>
                                        </apex:outputText>
                                        <apex:outputText rendered="{!option.value != me.LocaleSidKey}">
                                            <option value="{!option.value}">{!option.label}</option>
                                        </apex:outputText>
                                    </apex:dataList>
                                </select>
                            </div></td>
                        </tr>
                        <tr>
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Email_Encoding}:</td>
                            <td class="dataCol col02">
                                <div class="requiredInput"><div class="requiredBlock"></div>
                                <select name="emailEncoding" id="emailEncoding" size="1">
                                    <apex:dataList value="{!EmailEncodingOptions}" var="option">
                                        <apex:outputText rendered="{!option.value == me.EmailEncodingKey}">
                                            <option value="{!option.value}" selected="true">{!option.label}</option>
                                        </apex:outputText>
                                        <apex:outputText rendered="{!option.value != me.EmailEncodingKey}">
                                            <option value="{!option.value}">{!option.label}</option>
                                        </apex:outputText>
                                    </apex:dataList>
                                </select>
                            </div></td>
                        </tr>
                        <tr>
                            <td class="labelCol">{!$Label.ManagerUsers_Label_Is_User_Admin}:</td>
                            <td class="dataCol col02"><input id="isadmin" type="checkbox" value="true" name="isadmin" checked="checked"/></td>
                        </tr>
                    </tbody></table>
                    <div style="display:none;">
                        <apex:inputText id="inviteEmail" value="{!inviteEmail}"/>
                        <apex:inputText id="inviteFederationId" value="{!inviteFederationId}"/>
                        <apex:inputText id="inviteLocaleSidKey" value="{!inviteLocaleSidKey}"/>
                        <apex:inputText id="inviteEmailEncodingKey" value="{!inviteEmailEncodingKey}"/>
                        <apex:inputText id="inviteTimeZoneSidKey" value="{!inviteTimeZoneSidKey}"/>
                        <apex:inputText id="inviteLanguageLocaleKey" value="{!inviteLanguageLocaleKey}"/>
                        <apex:inputCheckbox id="inviteIsAdmin" value="{!inviteIsAdmin}"/>
                        <apex:commandButton id="createInvite" action="{!createInvite}"/>
                    </div>
                </apex:form>
            </div>
            <div class="pbBottomButtons">
                <table border="0" cellspacing="0" cellpadding="0"><tbody>
                <tr>
                <td class="pbTitle"></td>
                <td id="bottomButtonRow" class="pbButton">
                    <input id="createButtonBottom" disabled="true" type="button" title="{!$Label.ManagerUsers_Label_Create}" onclick="createUser(); return false;" name="create" class="btnDisabled" value="{!$Label.ManagerUsers_Label_Create}"/>
                    <span id="createButtonBottomThrobber" style="display:none;"><img src="https://www.redhat.com/g/chrome/throbber_dickie.gif"/></span>&nbsp;
                    <input type="button" title="{!$Label.ManagerUsers_Label_Cancel}" onclick="navigateToUrl('/apex/ManageSSOUsers',null,'new');" name="cancel" class="btn" value="{!$Label.ManagerUsers_Label_Cancel}"/>
                </td></tr>
                </tbody></table>
            </div>
        </apex:pageBlock>
    </div>
</apex:page>